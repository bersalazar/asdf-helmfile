##!/usr/bin/env bash

set -euo pipefail

[ -z "${ASDF_INSTALL_TYPE+x}" ] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[ -z "${ASDF_INSTALL_VERSION+x}" ] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[ -z "${ASDF_INSTALL_PATH+x}" ] && echo "ASDF_INSTALL_PATH is required" && exit 1

install() {
  local install_type=$1
  [ "$install_type" != "version" ] && echo "install type, $install_type, is not supported" && exit 1

  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"

  local platform
  [ "Linux" = "$(uname)" ] && platform="linux" || platform="darwin"
  local arch
  [ "x86_64" = "$(uname -m)" ] && arch="amd64" || arch="386"
  [ "aarch64" = "$(uname -m)" ] && arch="arm64"
  [ "arm64" = "$(uname -m)" ] && arch="arm64"

  mkdir -p "${bin_install_path}"

  local custom_download_url="https://helmfile-f2ce475813.s3.eu-west-1.amazonaws.com/helmfile-v${version}-${platform}-${arch}.tar.gz"
  local upstream_download_url="https://github.com/helmfile/helmfile/releases/download/v${version}/helmfile_${version}_${platform}_${arch}.tar.gz"

  # checks if the custom download URL is valid
  if curl --fail --silent --head "${custom_download_url}"; then
      echo "Downloading helmfile from ${custom_download_url}"
      curl -sL "$custom_download_url" -o helmfile.tar.gz
  # otherwise, try to download from the upstream URL
  else
      echo "Downloading helmfile from ${upstream_download_url}"
      curl -sL "$upstream_download_url" -o helmfile.tar.gz
  fi

  if ! tar -C "$bin_install_path" -xf helmfile.tar.gz helmfile; then
    echo "Failed to extract helmfile. Please ensure that the version ${version} exists."
    exit 1
  fi

  rm helmfile.tar.gz
}

install "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
